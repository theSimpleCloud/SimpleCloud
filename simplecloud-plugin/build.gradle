/*
 * MIT License
 *
 * Copyright (C) 2020 The SimpleCloud authors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 * documentation files (the "Software"), to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

dependencies {
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.12'
    compile(group: 'io.netty', name: 'netty-all', version: "4.1.54.Final")
    compile(group: 'eu.thesimplecloud.clientserverapi', name: 'clientserverapi', version: depedencyClientServerAPIVersion) {
        transitive = false
    }
    compile(group: 'eu.thesimplecloud.jsonlib', name: 'json-lib', version: "1.0.8") {
        transitive = false
    }
    compile(project(":simplecloud-api")) {
        transitive = false
    }

    compile(project(":simplecloud-client")) {
        transitive = false
    }
    compileOnly 'org.spigotmc:spigot-api:1.17-R0.1-SNAPSHOT'
    compileOnly 'net.md-5:bungeecord-api:1.17-R0.1-SNAPSHOT'
    compileOnly 'com.velocitypowered:velocity-api:1.1.8'
    annotationProcessor 'com.velocitypowered:velocity-api:1.1.8'
}


configurations {
    jar.archiveName = 'SimpleCloud-Plugin.jar'
}

jar {
    dependsOn ':simplecloud-client:jar'
    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    from {
        configurations.compile.collect {
            if (it.name.contains("netty")) return
            it.isDirectory() ? it : zipTree(it)
        }
    }
}
